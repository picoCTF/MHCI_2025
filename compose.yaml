# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  frontend:
    container_name: frontend
    environment:
      - NODE_ENV=development
    image: repository/frontend/react_app
    build:
      dockerfile: frontend.Dockerfile
      context: ./frontend/react_app
    ports:
      - 6006:6006   # Hit storybook directly, no need for API proxy
    expose:
      - 5173:5173   # Accessed via http://localhost to enable /api proxying to production API
    volumes:
      - ./frontend/react_app:/app                # Bind mount for live reloading
      - frontend_node_modules:/app/node_modules  # Named volume for performance
    networks:
      - app-network

  caddy:
    image: caddy:latest
    container_name: caddy-server
    ports:
      - "80:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  frontend_node_modules:

